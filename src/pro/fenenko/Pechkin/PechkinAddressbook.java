/*
 * Copyright 2017 Fenenko Aleksandr.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package pro.fenenko.Pechkin;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Vector;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.ListSelectionModel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import pro.fenenko.Bitmessage.BMAddressUtils;

/**
 *
 * @author Fenenko Aleksandr
 */
public class PechkinAddressbook extends javax.swing.JFrame {

    private BMAddressUtils aUtils = new BMAddressUtils();
    private int[] rowSelect = new int[0];
    private String[] addressTable = new String[0];
    private String[] nameTable = new String[0];

    /**
     * Creates new form PechkinAddressbook
     */
    public PechkinAddressbook() {
        initComponents();
        setIconImage(new javax.swing.ImageIcon(getClass().getResource("/pechkin/res/ic_launcher_144.png")).getImage());
        ListSelectionModel selModel = listAddressbook.getSelectionModel();
        selModel.addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent lse) {
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
                rowSelect = listAddressbook.getSelectedRows();

                //System.out.println(rowSelect.length);
            }
        });
        updateTable();
    }

    private void updateTable() {
        DefaultTableModel dtm = (DefaultTableModel) listAddressbook.getModel();
        while (0 < dtm.getRowCount()) {
            dtm.removeRow(0);
        }
        int count = PechkinPrivateData.getCountAddressbook();
        addressTable = new String[count];
        nameTable = new String[count];
        for (int i = 0; i < count; i++) {
            Vector<String> row = new Vector<String>(2);
            addressTable[i] = PechkinPrivateData.getAddress(i);
            nameTable[i] = PechkinPrivateData.getName(i);
            row.add(PechkinPrivateData.getAddress(i));
            row.add(PechkinPrivateData.getName(i));
            dtm.addRow(row);

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addAddress = new javax.swing.JDialog();
        jLabel2 = new javax.swing.JLabel();
        newAddress = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        newName = new javax.swing.JTextField();
        buttonAdd = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0));
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAddressbook = new javax.swing.JTable();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle"); // NOI18N
        addAddress.setTitle(bundle.getString("NEW ADDRESS")); // NOI18N
        addAddress.setResizable(false);
        addAddress.setSize(new java.awt.Dimension(400, 120));

        jLabel2.setText(bundle.getString("ADDRESS")); // NOI18N

        newAddress.addCaretListener(new javax.swing.event.CaretListener() {
            public void caretUpdate(javax.swing.event.CaretEvent evt) {
                newAddressCaretUpdate(evt);
            }
        });

        jLabel3.setText(bundle.getString("NAME")); // NOI18N

        buttonAdd.setText(bundle.getString("ADD")); // NOI18N
        buttonAdd.setToolTipText("");
        buttonAdd.setEnabled(false);
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        buttonCancel.setText(bundle.getString("CANCEL")); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addAddressLayout = new javax.swing.GroupLayout(addAddress.getContentPane());
        addAddress.getContentPane().setLayout(addAddressLayout);
        addAddressLayout.setHorizontalGroup(
            addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAddressLayout.createSequentialGroup()
                .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addAddressLayout.createSequentialGroup()
                        .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newAddress)
                            .addComponent(newName)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addAddressLayout.createSequentialGroup()
                        .addGap(0, 338, Short.MAX_VALUE)
                        .addComponent(buttonCancel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(buttonAdd)))
                .addContainerGap())
        );
        addAddressLayout.setVerticalGroup(
            addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addAddressLayout.createSequentialGroup()
                .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(newAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(newName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addAddressLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonAdd)
                    .addComponent(buttonCancel)))
        );

        setTitle(bundle.getString("ADDRESSBOOK")); // NOI18N

        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);
        jToolBar1.setPreferredSize(new java.awt.Dimension(100, 42));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pechkin/res/add-32.png"))); // NOI18N
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        listAddressbook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Address", "Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        listAddressbook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                listAddressbookMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                listAddressbookMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(listAddressbook);
        if (listAddressbook.getColumnModel().getColumnCount() > 0) {
            listAddressbook.getColumnModel().getColumn(0).setHeaderValue(bundle.getString("ADDRESS")); // NOI18N
            listAddressbook.getColumnModel().getColumn(1).setHeaderValue(bundle.getString("NAME")); // NOI18N
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 733, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        //new dialogAddAddress();
        addAddress.setVisible(true);
        //addAddress.setSize(addAddress.getPreferredSize());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        // TODO add your handling code here:
        addAddress.dispose();
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void newAddressCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_newAddressCaretUpdate
        // TODO add your handling code here:
        buttonAdd.setEnabled(aUtils.checkAddressBM(newAddress.getText()));
        //System.out.println(newAddress.getText());
    }//GEN-LAST:event_newAddressCaretUpdate

    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed
        // TODO add your handling code here:
        String address = newAddress.getText();
        String name = newName.getText();
        if (PechkinPrivateData.isAddress(address)) {
            //JOptionPane.showMessageDialog(this, evt, name, WIDTH);
            JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("THIS ADDRESS IS PRESSED IN ADDRESSBOOK"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
            addAddress.dispose();
            return;
        }
        if (PechkinPrivateData.isName(name)) {
            JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("THIS NAME IS PRESSED IN ADDRESSBOOK"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (name.length() == 0) {
            JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("NAME IS EMPTY"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
            return;

        }
        PechkinPrivateData.addOrChangeAddressbok(address, name);
        updateTable();
        PechkinMainWindow.updateAddress();
    }//GEN-LAST:event_buttonAddActionPerformed

    private void listAddressbookMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAddressbookMousePressed
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            createPopupMenu(evt);
        }
    }//GEN-LAST:event_listAddressbookMousePressed

    private void listAddressbookMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listAddressbookMouseReleased
        // TODO add your handling code here:
        if (evt.isPopupTrigger()) {
            createPopupMenu(evt);
        }
    }//GEN-LAST:event_listAddressbookMouseReleased

    private void createPopupMenu(java.awt.event.MouseEvent evt) {
        JMenuItem changeName = new JMenuItem(java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("CHANGE NAME"));
        changeName.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                String address = addressTable[rowSelect[0]];
                String name = PechkinPrivateData.getName(address);
                String s = java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("CHANGE NAME FOR ADDRESS");
                String ret = JOptionPane.showInputDialog(null, s + address, name);
                if (ret != null) {
                    if((new BMAddressUtils()).getVersionAddressBM(address) < 4){
                        JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("THIS VERSION PECHKIN NOT SUPPORTED VERSIONS ADDRESS LESS 4"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
                        return;
                        
                    }
                    if (PechkinPrivateData.isName(name)) {
                        JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("THIS NAME IS PRESSED IN ADDRESSBOOK"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    if (name.length() == 0) {
                        JOptionPane.showMessageDialog(null, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("NAME IS EMPTY"), java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ERROR ADDRESSBOOK"), JOptionPane.ERROR_MESSAGE);
                        return;

                    }
                    PechkinPrivateData.addOrChangeAddressbok(address, ret);
                    PechkinMainWindow.updateAddress();
                    updateTable();
                    
                }
                //createDialogSetName(address,name,name);
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        JMenuItem delete = new JMenuItem(java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("DELETE ADDRESS"));
        delete.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent ae) {
                String name = java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("ARE YOU SURE DELETE ADDRESS");
                name += ":";
                for (int i = 0; i < rowSelect.length; i++) {
                    if (0 < nameTable[rowSelect[i]].length()) {
                        name += nameTable[rowSelect[i]] + "\n";
                    }
                }
                int ret = JOptionPane.showConfirmDialog(null, name, java.util.ResourceBundle.getBundle("pro/fenenko/Pechkin/internalization/Bundle").getString("DELETE OPTION"), JOptionPane.YES_NO_OPTION);
                if (ret == JOptionPane.YES_OPTION) {
                    for (int i = 0; i < rowSelect.length; i++) {
                        PechkinPrivateData.deleteAddressInAddressbook(addressTable[rowSelect[i]]);
                    }
                    PechkinMainWindow.updateAddress();
                    updateTable();
                }
                //deleteSubscribe();
                //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });
        JPopupMenu jpu = new JPopupMenu();
        if (this.rowSelect.length == 1) {
            jpu.add(changeName);
        }

        if (0 < this.rowSelect.length) {
            jpu.add(delete);
        }

        jpu.show(evt.getComponent(), evt.getX(), evt.getY());
    }

    public static void view() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PechkinAddressbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PechkinAddressbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PechkinAddressbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PechkinAddressbook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PechkinAddressbook().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog addAddress;
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonCancel;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable listAddressbook;
    private javax.swing.JTextField newAddress;
    private javax.swing.JTextField newName;
    // End of variables declaration//GEN-END:variables
}
