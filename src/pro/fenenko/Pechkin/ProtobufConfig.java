// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: PechkinConfig.proto

package pro.fenenko.Pechkin;

public final class ProtobufConfig {
  private ProtobufConfig() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConfigOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 ServerPort = 1;
    /**
     * <code>required int32 ServerPort = 1;</code>
     */
    boolean hasServerPort();
    /**
     * <code>required int32 ServerPort = 1;</code>
     */
    int getServerPort();

    // required int32 ServerConnect = 2;
    /**
     * <code>required int32 ServerConnect = 2;</code>
     */
    boolean hasServerConnect();
    /**
     * <code>required int32 ServerConnect = 2;</code>
     */
    int getServerConnect();

    // required int32 ClientConnect = 3;
    /**
     * <code>required int32 ClientConnect = 3;</code>
     */
    boolean hasClientConnect();
    /**
     * <code>required int32 ClientConnect = 3;</code>
     */
    int getClientConnect();
  }
  /**
   * Protobuf type {@code pro.fenenko.Pechkin.Config}
   */
  public static final class Config extends
      com.google.protobuf.GeneratedMessage
      implements ConfigOrBuilder {
    // Use Config.newBuilder() to construct.
    private Config(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Config(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Config defaultInstance;
    public static Config getDefaultInstance() {
      return defaultInstance;
    }

    public Config getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Config(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              serverPort_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              serverConnect_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              clientConnect_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return pro.fenenko.Pechkin.ProtobufConfig.internal_static_pro_fenenko_Pechkin_Config_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return pro.fenenko.Pechkin.ProtobufConfig.internal_static_pro_fenenko_Pechkin_Config_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              pro.fenenko.Pechkin.ProtobufConfig.Config.class, pro.fenenko.Pechkin.ProtobufConfig.Config.Builder.class);
    }

    public static com.google.protobuf.Parser<Config> PARSER =
        new com.google.protobuf.AbstractParser<Config>() {
      public Config parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Config(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Config> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 ServerPort = 1;
    public static final int SERVERPORT_FIELD_NUMBER = 1;
    private int serverPort_;
    /**
     * <code>required int32 ServerPort = 1;</code>
     */
    public boolean hasServerPort() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 ServerPort = 1;</code>
     */
    public int getServerPort() {
      return serverPort_;
    }

    // required int32 ServerConnect = 2;
    public static final int SERVERCONNECT_FIELD_NUMBER = 2;
    private int serverConnect_;
    /**
     * <code>required int32 ServerConnect = 2;</code>
     */
    public boolean hasServerConnect() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 ServerConnect = 2;</code>
     */
    public int getServerConnect() {
      return serverConnect_;
    }

    // required int32 ClientConnect = 3;
    public static final int CLIENTCONNECT_FIELD_NUMBER = 3;
    private int clientConnect_;
    /**
     * <code>required int32 ClientConnect = 3;</code>
     */
    public boolean hasClientConnect() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 ClientConnect = 3;</code>
     */
    public int getClientConnect() {
      return clientConnect_;
    }

    private void initFields() {
      serverPort_ = 0;
      serverConnect_ = 0;
      clientConnect_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasServerPort()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasServerConnect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasClientConnect()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, serverPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, serverConnect_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, clientConnect_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, serverPort_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, serverConnect_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, clientConnect_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static pro.fenenko.Pechkin.ProtobufConfig.Config parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(pro.fenenko.Pechkin.ProtobufConfig.Config prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code pro.fenenko.Pechkin.Config}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements pro.fenenko.Pechkin.ProtobufConfig.ConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return pro.fenenko.Pechkin.ProtobufConfig.internal_static_pro_fenenko_Pechkin_Config_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return pro.fenenko.Pechkin.ProtobufConfig.internal_static_pro_fenenko_Pechkin_Config_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                pro.fenenko.Pechkin.ProtobufConfig.Config.class, pro.fenenko.Pechkin.ProtobufConfig.Config.Builder.class);
      }

      // Construct using pro.fenenko.Pechkin.ProtobufConfig.Config.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        serverPort_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        serverConnect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        clientConnect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return pro.fenenko.Pechkin.ProtobufConfig.internal_static_pro_fenenko_Pechkin_Config_descriptor;
      }

      public pro.fenenko.Pechkin.ProtobufConfig.Config getDefaultInstanceForType() {
        return pro.fenenko.Pechkin.ProtobufConfig.Config.getDefaultInstance();
      }

      public pro.fenenko.Pechkin.ProtobufConfig.Config build() {
        pro.fenenko.Pechkin.ProtobufConfig.Config result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public pro.fenenko.Pechkin.ProtobufConfig.Config buildPartial() {
        pro.fenenko.Pechkin.ProtobufConfig.Config result = new pro.fenenko.Pechkin.ProtobufConfig.Config(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.serverPort_ = serverPort_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.serverConnect_ = serverConnect_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.clientConnect_ = clientConnect_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof pro.fenenko.Pechkin.ProtobufConfig.Config) {
          return mergeFrom((pro.fenenko.Pechkin.ProtobufConfig.Config)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(pro.fenenko.Pechkin.ProtobufConfig.Config other) {
        if (other == pro.fenenko.Pechkin.ProtobufConfig.Config.getDefaultInstance()) return this;
        if (other.hasServerPort()) {
          setServerPort(other.getServerPort());
        }
        if (other.hasServerConnect()) {
          setServerConnect(other.getServerConnect());
        }
        if (other.hasClientConnect()) {
          setClientConnect(other.getClientConnect());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasServerPort()) {
          
          return false;
        }
        if (!hasServerConnect()) {
          
          return false;
        }
        if (!hasClientConnect()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        pro.fenenko.Pechkin.ProtobufConfig.Config parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (pro.fenenko.Pechkin.ProtobufConfig.Config) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 ServerPort = 1;
      private int serverPort_ ;
      /**
       * <code>required int32 ServerPort = 1;</code>
       */
      public boolean hasServerPort() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 ServerPort = 1;</code>
       */
      public int getServerPort() {
        return serverPort_;
      }
      /**
       * <code>required int32 ServerPort = 1;</code>
       */
      public Builder setServerPort(int value) {
        bitField0_ |= 0x00000001;
        serverPort_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ServerPort = 1;</code>
       */
      public Builder clearServerPort() {
        bitField0_ = (bitField0_ & ~0x00000001);
        serverPort_ = 0;
        onChanged();
        return this;
      }

      // required int32 ServerConnect = 2;
      private int serverConnect_ ;
      /**
       * <code>required int32 ServerConnect = 2;</code>
       */
      public boolean hasServerConnect() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 ServerConnect = 2;</code>
       */
      public int getServerConnect() {
        return serverConnect_;
      }
      /**
       * <code>required int32 ServerConnect = 2;</code>
       */
      public Builder setServerConnect(int value) {
        bitField0_ |= 0x00000002;
        serverConnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ServerConnect = 2;</code>
       */
      public Builder clearServerConnect() {
        bitField0_ = (bitField0_ & ~0x00000002);
        serverConnect_ = 0;
        onChanged();
        return this;
      }

      // required int32 ClientConnect = 3;
      private int clientConnect_ ;
      /**
       * <code>required int32 ClientConnect = 3;</code>
       */
      public boolean hasClientConnect() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 ClientConnect = 3;</code>
       */
      public int getClientConnect() {
        return clientConnect_;
      }
      /**
       * <code>required int32 ClientConnect = 3;</code>
       */
      public Builder setClientConnect(int value) {
        bitField0_ |= 0x00000004;
        clientConnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 ClientConnect = 3;</code>
       */
      public Builder clearClientConnect() {
        bitField0_ = (bitField0_ & ~0x00000004);
        clientConnect_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:pro.fenenko.Pechkin.Config)
    }

    static {
      defaultInstance = new Config(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:pro.fenenko.Pechkin.Config)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_pro_fenenko_Pechkin_Config_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_pro_fenenko_Pechkin_Config_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023PechkinConfig.proto\022\023pro.fenenko.Pechk" +
      "in\"J\n\006Config\022\022\n\nServerPort\030\001 \002(\005\022\025\n\rServ" +
      "erConnect\030\002 \002(\005\022\025\n\rClientConnect\030\003 \002(\005B\020" +
      "B\016ProtobufConfig"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_pro_fenenko_Pechkin_Config_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_pro_fenenko_Pechkin_Config_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_pro_fenenko_Pechkin_Config_descriptor,
              new java.lang.String[] { "ServerPort", "ServerConnect", "ClientConnect", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
